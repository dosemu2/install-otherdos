#!/usr/bin/python3

import argparse
import os
import subprocess
import sys
import zipfile
from pathlib import Path

SCRIPT_ROOT = os.path.dirname(os.path.realpath(__file__))

parser = argparse.ArgumentParser(description="""Detect which DOS is in the provided source directory and execute the fitting installation routine.
Supports FreeDOS ZIP files, MS-DOS installation files and OpenDOS RPMs.""")
parser.add_argument("-s", "--source", type=str, help="source directory containing DOS installation files")
parser.add_argument("-d", "--destination", type=str, help="destination root directory")
parser.add_argument("-v", "--variant", type=str, choices=['full', 'userspace'], nargs='?', help="FreeDOS only: install a full environment or only the userspace parts (intended to complement FDPP)")

args = parser.parse_args()
if args.variant == None:
    args.variant = "full"

# system installation
cmddir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', 'share', 'dosemu', 'commands')
if not Path(cmddir, 'fdconfig.sys').is_file():
    # running from within source tree
    cmddir = os.path.dirname(os.path.abspath(__file__))

# Detect which DOS is provided and run the appropriate installation routine
for filename in Path(args.source).glob('*.zip'):
    for entry in zipfile.ZipFile(filename).namelist():
        if entry == 'BIN/': # found a freedos archive
            sys.exit(subprocess.run([os.path.join(SCRIPT_ROOT, 'dosemu-setupfreedos'), '-s', args.source, '-d', args.destination, '-v', args.variant]).returncode)

if Path(os.path.join(args.source, 'msdos.sys')).exists():
    sys.exit(subprocess.run([os.path.join(SCRIPT_ROOT, 'dosemu-installmsdos'), args.source, args.destination]).returncode)

if list(Path(args.source).glob('opendos-hdimage*.rpm')):
    sys.exit(subprocess.run([os.path.join(SCRIPT_ROOT, 'dosemu-installopendos'), args.source, args.destination]).returncode)

print('No DOS installation files were found.')
print('Run dosemu-downloaddos to download a version of DOS.')
sys.exit(1)
